"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[3097],{6710:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=a(4848),r=a(8453);const i={sidebar_position:43},s="GUI (Graphical User Interface) in Java",o={id:"java/Java.GUI",title:"Java.GUI",description:"Graphical User Interface (GUI) programming in Java involves creating interactive applications with graphical elements such as windows, buttons, text fields, checkboxes, etc. Java provides several libraries and frameworks for building GUIs, with two main options being Swing and JavaFX. Here, I'll provide an overview of both and include some basic examples.",source:"@site/docs/java/Java.GUI.md",sourceDirName:"java",slug:"/java/Java.GUI",permalink:"/my-website-tutorial/docs/java/Java.GUI",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/java/Java.GUI.md",tags:[],version:"current",sidebarPosition:43,frontMatter:{sidebar_position:43},sidebar:"tutorialSidebar",previous:{title:"Java-JDBC",permalink:"/my-website-tutorial/docs/java/Java-JDBC"},next:{title:"Java-Servlets",permalink:"/my-website-tutorial/docs/java/Java-Servlets"}},l={},c=[];function d(e){const n={code:"code",h1:"h1",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Graphical User Interface (GUI) programming in Java involves creating interactive applications with graphical elements such as windows, buttons, text fields, checkboxes, etc. Java provides several libraries and frameworks for building GUIs, with two main options being Swing and JavaFX. Here, I'll provide an overview of both and include some basic examples."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h1,{id:"gui-graphical-user-interface-in-java",children:"GUI (Graphical User Interface) in Java"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Swing"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Swing is a GUI toolkit included in the Java Foundation Classes (JFC) that provides a set of lightweight components for building desktop applications."}),"\n",(0,t.jsx)(n.li,{children:"It follows the Model-View-Controller (MVC) architecture, where components represent the View, data models represent the Model, and controllers handle user interactions."}),"\n",(0,t.jsx)(n.li,{children:"Swing components are customizable and platform-independent, making them suitable for cross-platform development."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example Swing Program:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import javax.swing.*;\r\n\r\npublic class SwingExample {\r\n    public static void main(String[] args) {\r\n        JFrame frame = new JFrame("Swing Example");\r\n        JButton button = new JButton("Click Me");\r\n\r\n        button.setBounds(50, 50, 100, 40); // Set button position and size\r\n\r\n        // Add action listener to handle button click\r\n        button.addActionListener(e -> JOptionPane.showMessageDialog(frame, "Button clicked!"));\r\n\r\n        frame.add(button); // Add button to the frame\r\n        frame.setSize(300, 200); // Set frame size\r\n        frame.setLayout(null); // Disable default layout manager\r\n        frame.setVisible(true); // Make frame visible\r\n    }\r\n}\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"JavaFX"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"JavaFX is a modern GUI toolkit introduced in Java 8 as a replacement for Swing. It provides a rich set of components and supports features like animations, effects, and multimedia."}),"\n",(0,t.jsx)(n.li,{children:"JavaFX uses a scene graph-based architecture, where UI elements are organized hierarchically in a tree structure."}),"\n",(0,t.jsx)(n.li,{children:"It offers a more declarative approach to UI design using FXML (FXML Markup Language) for defining layouts and styles separately from the application logic."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example JavaFX Program:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import javafx.application.Application;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.stage.Stage;\r\n\r\npublic class JavaFXExample extends Application {\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        Button button = new Button("Click Me");\r\n        button.setOnAction(e -> {\r\n            System.out.println("Button clicked!");\r\n            primaryStage.close();\r\n        });\r\n\r\n        StackPane root = new StackPane();\r\n        root.getChildren().add(button);\r\n\r\n        Scene scene = new Scene(root, 300, 200);\r\n\r\n        primaryStage.setTitle("JavaFX Example");\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Both Swing and JavaFX provide extensive documentation and tutorials for building more complex GUI applications. You can choose the one that best suits your requirements and familiarity with the libraries."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var t=a(6540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[6096],{1732:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var n=s(4848),r=s(8453);const i={sidebar_position:22},t="Java Modifiers",o={id:"java/Java-Modifiers",title:"Java-Modifiers",description:"Modifiers in Java are keywords that are used to modify the state or behavior of classes, variables, methods, and other program elements. These modifiers control access, visibility, inheritance, and other aspects of Java code. Here's a detailed explanation of the different types of modifiers in Java along with examples:",source:"@site/docs/java/Java-Modifiers.md",sourceDirName:"java",slug:"/java/Java-Modifiers",permalink:"/my-website-tutorial/docs/java/Java-Modifiers",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/java/Java-Modifiers.md",tags:[],version:"current",sidebarPosition:22,frontMatter:{sidebar_position:22},sidebar:"tutorialSidebar",previous:{title:"Java-Constructor",permalink:"/my-website-tutorial/docs/java/Java-Constructor"},next:{title:"Java-Inheritance",permalink:"/my-website-tutorial/docs/java/Java-Inheritance"}},c={},l=[];function d(e){const a={code:"code",h1:"h1",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:"Modifiers in Java are keywords that are used to modify the state or behavior of classes, variables, methods, and other program elements. These modifiers control access, visibility, inheritance, and other aspects of Java code. Here's a detailed explanation of the different types of modifiers in Java along with examples:"}),"\n",(0,n.jsx)(a.hr,{}),"\n",(0,n.jsx)(a.h1,{id:"java-modifiers",children:"Java Modifiers"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Access Modifiers"}),":"]}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"public"}),": Accessible from anywhere. Example:","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:"public class MyClass {\r\n    public int myPublicVar;\r\n    public void myPublicMethod() {\r\n        // code here\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"protected"}),": Accessible within the same package or subclasses in different packages. Example:","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:"class MyClass {\r\n    protected int myProtectedVar;\r\n    protected void myProtectedMethod() {\r\n        // code here\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"default"})," (no modifier): Accessible within the same package only. Example:","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:"class MyClass {\r\n    int myDefaultVar;\r\n    void myDefaultMethod() {\r\n        // code here\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"private"}),": Accessible only within the same class. Example:","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:"class MyClass {\r\n    private int myPrivateVar;\r\n    private void myPrivateMethod() {\r\n        // code here\r\n    }\r\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Non-access Modifiers"}),":"]}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"final"}),": Indicates that a variable cannot be changed or a method cannot be overridden. Example:","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:"class MyClass {\r\n    final int myFinalVar = 10;\r\n    final void myFinalMethod() {\r\n        // code here\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"static"}),": Belongs to the class rather than instances of the class. Example:","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:"class MyClass {\r\n    static int myStaticVar = 5;\r\n    static void myStaticMethod() {\r\n        // code here\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"abstract"}),": Used for abstract classes and methods. Example:","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:"abstract class MyAbstractClass {\r\n    abstract void myAbstractMethod();\r\n}\n"})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"synchronized"}),": Ensures that only one thread can access a method or block of code at a time. Example:","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:"class MyClass {\r\n    synchronized void mySynchronizedMethod() {\r\n        // code here\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"volatile"}),": Indicates that a variable may be modified asynchronously by multiple threads. Example:","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:"class MyClass {\r\n    volatile int myVolatileVar;\r\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"These modifiers provide flexibility and control over the visibility, behavior, and characteristics of Java code elements, allowing developers to design robust and maintainable applications."})]})}function h(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,a,s)=>{s.d(a,{R:()=>t,x:()=>o});var n=s(6540);const r={},i=n.createContext(r);function t(e){const a=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),n.createElement(i.Provider,{value:a},e.children)}}}]);
"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[8581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Tutorial Intro","href":"/my-website-tutorial/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Tutorial - Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a Page","href":"/my-website-tutorial/docs/tutorial-basics/create-a-page","docId":"tutorial-basics/create-a-page","unlisted":false},{"type":"link","label":"Create a Document","href":"/my-website-tutorial/docs/tutorial-basics/create-a-document","docId":"tutorial-basics/create-a-document","unlisted":false},{"type":"link","label":"Create a Blog Post","href":"/my-website-tutorial/docs/tutorial-basics/create-a-blog-post","docId":"tutorial-basics/create-a-blog-post","unlisted":false},{"type":"link","label":"Markdown Features","href":"/my-website-tutorial/docs/tutorial-basics/markdown-features","docId":"tutorial-basics/markdown-features","unlisted":false},{"type":"link","label":"Deploy your site","href":"/my-website-tutorial/docs/tutorial-basics/deploy-your-site","docId":"tutorial-basics/deploy-your-site","unlisted":false},{"type":"link","label":"Congratulations!","href":"/my-website-tutorial/docs/tutorial-basics/congratulations","docId":"tutorial-basics/congratulations","unlisted":false}],"href":"/my-website-tutorial/docs/category/tutorial---basics"},{"type":"category","label":"Tutorial - Extras","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Manage Docs Versions","href":"/my-website-tutorial/docs/tutorial-extras/manage-docs-versions","docId":"tutorial-extras/manage-docs-versions","unlisted":false},{"type":"link","label":"Translate your site","href":"/my-website-tutorial/docs/tutorial-extras/translate-your-site","docId":"tutorial-extras/translate-your-site","unlisted":false}],"href":"/my-website-tutorial/docs/category/tutorial---extras"},{"type":"category","label":"Python","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Python Home","href":"/my-website-tutorial/docs/python/Python-home","docId":"python/Python-home","unlisted":false},{"type":"link","label":"Python Overview","href":"/my-website-tutorial/docs/python/Python-overview","docId":"python/Python-overview","unlisted":false},{"type":"link","label":"Python-environment-setup","href":"/my-website-tutorial/docs/python/Python-environment-setup","docId":"python/Python-environment-setup","unlisted":false},{"type":"link","label":"Python-comments","href":"/my-website-tutorial/docs/python/Python-comments","docId":"python/Python-comments","unlisted":false},{"type":"link","label":"Python-syntax","href":"/my-website-tutorial/docs/python/Python-syntax","docId":"python/Python-syntax","unlisted":false},{"type":"link","label":"Python-variables","href":"/my-website-tutorial/docs/python/Python-variables","docId":"python/Python-variables","unlisted":false},{"type":"link","label":"Python-datatypes","href":"/my-website-tutorial/docs/python/Python-datatypes","docId":"python/Python-datatypes","unlisted":false},{"type":"link","label":"Python-operators","href":"/my-website-tutorial/docs/python/Python-operators","docId":"python/Python-operators","unlisted":false},{"type":"link","label":"Python-strings","href":"/my-website-tutorial/docs/python/Python-strings","docId":"python/Python-strings","unlisted":false},{"type":"link","label":"Python-numbers","href":"/my-website-tutorial/docs/python/Python-numbers","docId":"python/Python-numbers","unlisted":false},{"type":"link","label":"Python-lists","href":"/my-website-tutorial/docs/python/Python-lists","docId":"python/Python-lists","unlisted":false},{"type":"link","label":"Python-tuples","href":"/my-website-tutorial/docs/python/Python-tuples","docId":"python/Python-tuples","unlisted":false},{"type":"link","label":"Python-sets","href":"/my-website-tutorial/docs/python/Python-sets","docId":"python/Python-sets","unlisted":false},{"type":"link","label":"Python-String Formatting","href":"/my-website-tutorial/docs/python/Python-String Formatting","docId":"python/Python-String Formatting","unlisted":false},{"type":"link","label":"Python-Dictionaries","href":"/my-website-tutorial/docs/python/Python-Dictionaries","docId":"python/Python-Dictionaries","unlisted":false},{"type":"link","label":"Python-decision-making","href":"/my-website-tutorial/docs/python/Python-decision-making","docId":"python/Python-decision-making","unlisted":false},{"type":"link","label":"Python-If ... Else","href":"/my-website-tutorial/docs/python/Python-If ... Else","docId":"python/Python-If ... Else","unlisted":false},{"type":"link","label":"Python-control-statements","href":"/my-website-tutorial/docs/python/Python-control-statements","docId":"python/Python-control-statements","unlisted":false},{"type":"link","label":"Python-For Loops","href":"/my-website-tutorial/docs/python/Python-For Loops","docId":"python/Python-For Loops","unlisted":false},{"type":"link","label":"Python-While Loops","href":"/my-website-tutorial/docs/python/Python-While Loops","docId":"python/Python-While Loops","unlisted":false},{"type":"link","label":"Python-User Input","href":"/my-website-tutorial/docs/python/Python-User Input","docId":"python/Python-User Input","unlisted":false},{"type":"link","label":"Python-Exception Handling","href":"/my-website-tutorial/docs/python/Python-Exception Handling","docId":"python/Python-Exception Handling","unlisted":false},{"type":"link","label":"Python-Functions","href":"/my-website-tutorial/docs/python/Python-Functions","docId":"python/Python-Functions","unlisted":false},{"type":"link","label":"Python-Modules","href":"/my-website-tutorial/docs/python/Python-Modules","docId":"python/Python-Modules","unlisted":false},{"type":"link","label":"Python-File Handling","href":"/my-website-tutorial/docs/python/Python-File Handling","docId":"python/Python-File Handling","unlisted":false},{"type":"link","label":"Python-Classes or Objects","href":"/my-website-tutorial/docs/python/Python-Classes or Objects","docId":"python/Python-Classes or Objects","unlisted":false},{"type":"link","label":"Python-Inheritance","href":"/my-website-tutorial/docs/python/Python-Inheritance","docId":"python/Python-Inheritance","unlisted":false},{"type":"link","label":"Python-Polymorphism","href":"/my-website-tutorial/docs/python/Python-Polymorphism","docId":"python/Python-Polymorphism","unlisted":false},{"type":"link","label":"Python-Iterators","href":"/my-website-tutorial/docs/python/Python-Iterators","docId":"python/Python-Iterators","unlisted":false},{"type":"link","label":"Python-Math","href":"/my-website-tutorial/docs/python/Python-Math","docId":"python/Python-Math","unlisted":false},{"type":"link","label":"Python-Datetime","href":"/my-website-tutorial/docs/python/Python-Datetime","docId":"python/Python-Datetime","unlisted":false},{"type":"link","label":"Python-Lambda","href":"/my-website-tutorial/docs/python/Python-Lambda","docId":"python/Python-Lambda","unlisted":false},{"type":"link","label":"Python-Multithreading","href":"/my-website-tutorial/docs/python/Python-Multithreading","docId":"python/Python-Multithreading","unlisted":false},{"type":"link","label":"Python-RegEx","href":"/my-website-tutorial/docs/python/Python-RegEx","docId":"python/Python-RegEx","unlisted":false},{"type":"link","label":"Python-JSON","href":"/my-website-tutorial/docs/python/Python-JSON","docId":"python/Python-JSON","unlisted":false},{"type":"link","label":"Python-PIP","href":"/my-website-tutorial/docs/python/Python-PIP","docId":"python/Python-PIP","unlisted":false},{"type":"link","label":"Python-Scope","href":"/my-website-tutorial/docs/python/Python-Scope","docId":"python/Python-Scope","unlisted":false}],"href":"/my-website-tutorial/docs/category/python"},{"type":"category","label":"java","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Java-Home","href":"/my-website-tutorial/docs/java/intro","docId":"java/intro","unlisted":false},{"type":"link","label":"Setting-Up-Your-Java-Development-Environment","href":"/my-website-tutorial/docs/java/Setting-Up-Your-Java-Development-Environment","docId":"java/Setting-Up-Your-Java-Development-Environment","unlisted":false},{"type":"link","label":"Java-Synatx","href":"/my-website-tutorial/docs/java/Java-Synatx","docId":"java/Java-Synatx","unlisted":false},{"type":"link","label":"Java-Output","href":"/my-website-tutorial/docs/java/Java-Output","docId":"java/Java-Output","unlisted":false},{"type":"link","label":"Java-Comments","href":"/my-website-tutorial/docs/java/Java-Comments","docId":"java/Java-Comments","unlisted":false},{"type":"link","label":"Java.Variables","href":"/my-website-tutorial/docs/java/Java.Variables","docId":"java/Java.Variables","unlisted":false},{"type":"link","label":"Java-Data-Types","href":"/my-website-tutorial/docs/java/Java-Data-Types","docId":"java/Java-Data-Types","unlisted":false},{"type":"link","label":"Java-TypeCasting","href":"/my-website-tutorial/docs/java/Java-TypeCasting","docId":"java/Java-TypeCasting","unlisted":false},{"type":"link","label":"Java-Operators","href":"/my-website-tutorial/docs/java/Java-Operators","docId":"java/Java-Operators","unlisted":false},{"type":"link","label":"Java-Expressions","href":"/my-website-tutorial/docs/java/Java-Expressions","docId":"java/Java-Expressions","unlisted":false},{"type":"link","label":"Java-If-Else-Statements","href":"/my-website-tutorial/docs/java/Java-If-Else-Statements","docId":"java/Java-If-Else-Statements","unlisted":false},{"type":"link","label":"Java-Switch-Statements","href":"/my-website-tutorial/docs/java/Java-Switch-Statements","docId":"java/Java-Switch-Statements","unlisted":false},{"type":"link","label":"Java-For Loops","href":"/my-website-tutorial/docs/java/Java-For Loops","docId":"java/Java-For Loops","unlisted":false},{"type":"link","label":"Java-While Loops","href":"/my-website-tutorial/docs/java/Java-While Loops","docId":"java/Java-While Loops","unlisted":false},{"type":"link","label":"Java-Do-While Loops","href":"/my-website-tutorial/docs/java/Java-Do-While Loops","docId":"java/Java-Do-While Loops","unlisted":false},{"type":"link","label":"Java-break-countinue","href":"/my-website-tutorial/docs/java/Java-break-countinue","docId":"java/Java-break-countinue","unlisted":false},{"type":"link","label":"Java-Arrays-Collections","href":"/my-website-tutorial/docs/java/Java-Arrays-Collections","docId":"java/Java-Arrays-Collections","unlisted":false},{"type":"link","label":"Java-Methods","href":"/my-website-tutorial/docs/java/Java-Methods","docId":"java/Java-Methods","unlisted":false},{"type":"link","label":"Java-Object-Oriented-Programming-Concepts","href":"/my-website-tutorial/docs/java/Java-Object-Oriented-Programming-Concepts","docId":"java/Java-Object-Oriented-Programming-Concepts","unlisted":false},{"type":"link","label":"Java-Classes-Objects","href":"/my-website-tutorial/docs/java/Java-Classes-Objects","docId":"java/Java-Classes-Objects","unlisted":false},{"type":"link","label":"Java-Constructor","href":"/my-website-tutorial/docs/java/Java-Constructor","docId":"java/Java-Constructor","unlisted":false},{"type":"link","label":"Java-Modifiers","href":"/my-website-tutorial/docs/java/Java-Modifiers","docId":"java/Java-Modifiers","unlisted":false},{"type":"link","label":"Java-Inheritance","href":"/my-website-tutorial/docs/java/Java-Inheritance","docId":"java/Java-Inheritance","unlisted":false},{"type":"link","label":"Java-Polymorphism","href":"/my-website-tutorial/docs/java/Java-Polymorphism","docId":"java/Java-Polymorphism","unlisted":false},{"type":"link","label":"Java-Encapsulation","href":"/my-website-tutorial/docs/java/Java-Encapsulation","docId":"java/Java-Encapsulation","unlisted":false},{"type":"link","label":"Java-Abstraction","href":"/my-website-tutorial/docs/java/Java-Abstraction","docId":"java/Java-Abstraction","unlisted":false},{"type":"link","label":"Java-Interfaces","href":"/my-website-tutorial/docs/java/Java-Interfaces","docId":"java/Java-Interfaces","unlisted":false},{"type":"link","label":"Java-Enums","href":"/my-website-tutorial/docs/java/Java-Enums","docId":"java/Java-Enums","unlisted":false},{"type":"link","label":"Java-Date","href":"/my-website-tutorial/docs/java/Java-Date","docId":"java/Java-Date","unlisted":false},{"type":"link","label":"Java-Iterator","href":"/my-website-tutorial/docs/java/Java-Iterator","docId":"java/Java-Iterator","unlisted":false},{"type":"link","label":"Java-Wrapper Class","href":"/my-website-tutorial/docs/java/Java-Wrapper Class","docId":"java/Java-Wrapper Class","unlisted":false},{"type":"link","label":"Java-Exception-Handling","href":"/my-website-tutorial/docs/java/Java-Exception-Handling","docId":"java/Java-Exception-Handling","unlisted":false},{"type":"link","label":"Java-File-Handling","href":"/my-website-tutorial/docs/java/Java-File-Handling","docId":"java/Java-File-Handling","unlisted":false},{"type":"link","label":"Java-IO-Operations","href":"/my-website-tutorial/docs/java/Java-IO-Operations","docId":"java/Java-IO-Operations","unlisted":false},{"type":"link","label":"Java-MultiThreading","href":"/my-website-tutorial/docs/java/Java-MultiThreading","docId":"java/Java-MultiThreading","unlisted":false},{"type":"link","label":"Java-Generics","href":"/my-website-tutorial/docs/java/Java-Generics","docId":"java/Java-Generics","unlisted":false},{"type":"link","label":"Java-Enumerations","href":"/my-website-tutorial/docs/java/Java-Enumerations","docId":"java/Java-Enumerations","unlisted":false},{"type":"link","label":"Java-Working-with-Strings","href":"/my-website-tutorial/docs/java/Java-Working-with-Strings","docId":"java/Java-Working-with-Strings","unlisted":false},{"type":"link","label":"Java-RegEx","href":"/my-website-tutorial/docs/java/Java-RegEx","docId":"java/Java-RegEx","unlisted":false},{"type":"link","label":"Java-API","href":"/my-website-tutorial/docs/java/Java-API","docId":"java/Java-API","unlisted":false},{"type":"link","label":"Java-Networking-and-Socket Programming","href":"/my-website-tutorial/docs/java/Java-Networking-and-Socket Programming","docId":"java/Java-Networking-and-Socket Programming","unlisted":false},{"type":"link","label":"Java-JDBC","href":"/my-website-tutorial/docs/java/Java-JDBC","docId":"java/Java-JDBC","unlisted":false},{"type":"link","label":"Java.GUI","href":"/my-website-tutorial/docs/java/Java.GUI","docId":"java/Java.GUI","unlisted":false},{"type":"link","label":"Java-Servlets","href":"/my-website-tutorial/docs/java/Java-Servlets","docId":"java/Java-Servlets","unlisted":false},{"type":"link","label":"Java-Security","href":"/my-website-tutorial/docs/java/Java-Security","docId":"java/Java-Security","unlisted":false},{"type":"link","label":"Java-Development Tools-and-IDE\'S","href":"/my-website-tutorial/docs/java/Java-Development Tools-and-IDE\'S","docId":"java/Java-Development Tools-and-IDE\'S","unlisted":false}]}]},"docs":{"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes.","sidebar":"tutorialSidebar"},"java/intro":{"id":"java/intro","title":"Java-Home","description":"Welcome to the Java tutorial! This tutorial is designed to provide beginners with a comprehensive introduction to the Java programming language. By the end of this tutorial, you will have a solid understanding of Java\'s basic and advanced concepts, enabling you to develop your skills further and become a proficient software engineer.","sidebar":"tutorialSidebar"},"java/Java-Abstraction":{"id":"java/Java-Abstraction","title":"Java-Abstraction","description":"Abstraction in Java refers to the concept of hiding the implementation details of a class and only exposing the essential features or behaviors to the outside world. It allows programmers to focus on what an object does rather than how it does it. Abstraction is achieved through abstract classes and interfaces in Java.","sidebar":"tutorialSidebar"},"java/Java-API":{"id":"java/Java-API","title":"Java-API","description":"Here\'s a detailed explanation of APIs in Java with examples:","sidebar":"tutorialSidebar"},"java/Java-Arrays-Collections":{"id":"java/Java-Arrays-Collections","title":"Java-Arrays-Collections","description":"Here\'s a detailed explanation of arrays and collections in Java, along with examples:","sidebar":"tutorialSidebar"},"java/Java-break-countinue":{"id":"java/Java-break-countinue","title":"Java-break-countinue","description":"In Java, break and continue are control flow statements used within loops (such as for, while, or do-while) to alter the flow of execution.","sidebar":"tutorialSidebar"},"java/Java-Classes-Objects":{"id":"java/Java-Classes-Objects","title":"Java-Classes-Objects","description":"Here\'s a detailed explanation of classes and objects in Java, along with examples:","sidebar":"tutorialSidebar"},"java/Java-Comments":{"id":"java/Java-Comments","title":"Java-Comments","description":"Comments in Java are used to provide explanations or annotations within the source code. They are ignored by the compiler and have no effect on the execution of the program. Comments are essential for improving code readability, documenting code, and explaining the logic behind it. There are two types of comments in Java:","sidebar":"tutorialSidebar"},"java/Java-Constructor":{"id":"java/Java-Constructor","title":"Java-Constructor","description":"Here\'s a detailed explanation of constructors in Java with examples:","sidebar":"tutorialSidebar"},"java/Java-Data-Types":{"id":"java/Java-Data-Types","title":"Java-Data-Types","description":"Here\'s a detailed explanation of Java data types along with examples:","sidebar":"tutorialSidebar"},"java/Java-Date":{"id":"java/Java-Date","title":"Java-Date","description":"In Java, handling dates and times is facilitated by the java.time package, introduced in Java 8 as part of the Java Date and Time API (also known as the \\"ThreeTen\\" project). This API provides classes for representing dates, times, time zones, durations, and periods, along with various utility methods for manipulation and formatting.","sidebar":"tutorialSidebar"},"java/Java-Development Tools-and-IDE\'S":{"id":"java/Java-Development Tools-and-IDE\'S","title":"Java-Development Tools-and-IDE\'S","description":"Java development tools and Integrated Development Environments (IDEs) play a crucial role in the software development lifecycle, providing developers with a suite of features to write, debug, compile, and deploy Java applications efficiently.","sidebar":"tutorialSidebar"},"java/Java-Do-While Loops":{"id":"java/Java-Do-While Loops","title":"Java-Do-While Loops","description":"The \\"do-while\\" loop in Java is a control flow statement that repeatedly executes a block of code as long as a specified condition is true. Unlike the \\"while\\" loop, which tests the condition before executing the loop body, the \\"do-while\\" loop executes the loop body at least once before checking the condition for continuation. This means that the loop body will always execute at least once, regardless of whether the condition is true initially.","sidebar":"tutorialSidebar"},"java/Java-Encapsulation":{"id":"java/Java-Encapsulation","title":"Java-Encapsulation","description":"Encapsulation is one of the four fundamental Object-Oriented Programming (OOP) concepts in Java, along with inheritance, polymorphism, and abstraction. It refers to the bundling of data (attributes or fields) and methods (functions or behaviors) that operate on the data into a single unit called a class. The internal state of an object is hidden from the outside world, and access to it is restricted to methods defined within the class. This allows for better control over how data is accessed and modified, as well as providing a level of security and modularity to the code.","sidebar":"tutorialSidebar"},"java/Java-Enumerations":{"id":"java/Java-Enumerations","title":"Java-Enumerations","description":"Enumerations in Java provide a way to define a fixed set of constants (enumerated values) within a single data type. Enumerations (enums) make the code more readable, maintainable, and less error-prone by allowing developers to use meaningful names for constant values.","sidebar":"tutorialSidebar"},"java/Java-Enums":{"id":"java/Java-Enums","title":"Java-Enums","description":"Enums in Java provide a way to define a fixed set of constants or values within a single type. They offer type safety, readability, and flexibility in code, making it easier to represent a group of related constants.","sidebar":"tutorialSidebar"},"java/Java-Exception-Handling":{"id":"java/Java-Exception-Handling","title":"Java-Exception-Handling","description":"Exception handling in Java is a mechanism used to handle runtime errors or exceptional conditions that occur during the execution of a program. Exceptions can arise due to various reasons, such as invalid input, file not found, network failure, or arithmetic errors like division by zero. By handling exceptions effectively, you can gracefully deal with unexpected situations and prevent program crashes.","sidebar":"tutorialSidebar"},"java/Java-Expressions":{"id":"java/Java-Expressions","title":"Java-Expressions","description":"Expressions in Java are fundamental building blocks of any program, representing computations, operations, or values. They can be as simple as a single literal value or variable, or as complex as a combination of operators and operands. Here\'s a detailed explanation of Java expressions along with examples:","sidebar":"tutorialSidebar"},"java/Java-File-Handling":{"id":"java/Java-File-Handling","title":"Java-File-Handling","description":"File handling in Java involves reading from and writing to files on the system. Java provides various classes and methods for performing file operations.","sidebar":"tutorialSidebar"},"java/Java-For Loops":{"id":"java/Java-For Loops","title":"Java-For Loops","description":"Here\'s a detailed explanation of Java for loops along with examples:","sidebar":"tutorialSidebar"},"java/Java-Generics":{"id":"java/Java-Generics","title":"Java-Generics","description":"Generics in Java provide a way to create classes, interfaces, and methods that can operate on objects of various types while providing compile-time type safety. This allows you to write more flexible and reusable code by abstracting over types.","sidebar":"tutorialSidebar"},"java/Java-If-Else-Statements":{"id":"java/Java-If-Else-Statements","title":"Java-If-Else-Statements","description":"Here\'s a detailed explanation of the if-else statement in Java, along with examples:","sidebar":"tutorialSidebar"},"java/Java-Inheritance":{"id":"java/Java-Inheritance","title":"Java-Inheritance","description":"Inheritance is a fundamental concept in object-oriented programming (OOP) where a new class (subclass or derived class) is created by extending an existing class (superclass or base class). The subclass inherits the properties (fields) and behaviors (methods) of the superclass, allowing for code reuse and the creation of hierarchical relationships between classes.","sidebar":"tutorialSidebar"},"java/Java-Interfaces":{"id":"java/Java-Interfaces","title":"Java-Interfaces","description":"In Java, an interface is a reference type that defines a set of abstract methods and constants. It serves as a contract for classes that implement it, specifying what methods they must provide without defining how those methods should be implemented. Interfaces allow for the implementation of multiple inheritance, as a class can implement multiple interfaces.","sidebar":"tutorialSidebar"},"java/Java-IO-Operations":{"id":"java/Java-IO-Operations","title":"Java-IO-Operations","description":"Input/Output (I/O) operations in Java are used for reading input from external sources (such as keyboards, files, or network connections) and writing output to external destinations (such as monitors, files, or network connections). Java provides several classes and methods for performing I/O operations, including classes for handling input streams, output streams, readers, writers, and file operations.","sidebar":"tutorialSidebar"},"java/Java-Iterator":{"id":"java/Java-Iterator","title":"Java-Iterator","description":"An iterator in Java is an interface provided by the java.util package, specifically the Iterator interface. It is used to traverse through a collection of objects, such as ArrayList, LinkedList, HashSet, etc., one element at a time. Iterators provide a uniform way to access elements of various collection types, regardless of their underlying implementation.","sidebar":"tutorialSidebar"},"java/Java-JDBC":{"id":"java/Java-JDBC","title":"Java-JDBC","description":"Here\'s a detailed explanation of JDBC (Java Database Connectivity) in Java along with examples:","sidebar":"tutorialSidebar"},"java/Java-Methods":{"id":"java/Java-Methods","title":"Java-Methods","description":"In Java, a method is a block of code that performs a specific task and can be invoked or called from other parts of the program. Methods are used to organize code into reusable units, improve readability, and facilitate code maintenance.","sidebar":"tutorialSidebar"},"java/Java-Modifiers":{"id":"java/Java-Modifiers","title":"Java-Modifiers","description":"Modifiers in Java are keywords that are used to modify the state or behavior of classes, variables, methods, and other program elements. These modifiers control access, visibility, inheritance, and other aspects of Java code. Here\'s a detailed explanation of the different types of modifiers in Java along with examples:","sidebar":"tutorialSidebar"},"java/Java-MultiThreading":{"id":"java/Java-MultiThreading","title":"Java-MultiThreading","description":"Multi-threading in Java allows concurrent execution of multiple threads within the same process. This enables developers to write programs that can perform multiple tasks simultaneously, enhancing performance and responsiveness. Here\'s a detailed explanation of multi-threading in Java with examples:","sidebar":"tutorialSidebar"},"java/Java-Networking-and-Socket Programming":{"id":"java/Java-Networking-and-Socket Programming","title":"Java-Networking-and-Socket Programming","description":"Networking in Java allows developers to create networked applications that communicate over the internet or local networks. Socket programming is a key aspect of networking, enabling the creation of client-server applications where communication occurs between two endpoints.","sidebar":"tutorialSidebar"},"java/Java-Object-Oriented-Programming-Concepts":{"id":"java/Java-Object-Oriented-Programming-Concepts","title":"Java-Object-Oriented-Programming-Concepts","description":"Object-oriented programming (OOP) is a programming paradigm that revolves around the concept of objects, which are instances of classes. Java is an object-oriented programming language, and it fully supports the principles and concepts of OOP.","sidebar":"tutorialSidebar"},"java/Java-Operators":{"id":"java/Java-Operators","title":"Java-Operators","description":"Operators in Java are symbols used to perform operations on variables and values. They are classified into several categories based on their functionality, such as arithmetic operators, relational operators, logical operators, bitwise operators, assignment operators, and more. Here\'s a detailed explanation of each category with examples:","sidebar":"tutorialSidebar"},"java/Java-Output":{"id":"java/Java-Output","title":"Java-Output","description":"In Java, there are several ways to output information to the console or other output streams. The most common methods for outputting data include using System.out.println(), System.out.print(), and System.out.printf().","sidebar":"tutorialSidebar"},"java/Java-Polymorphism":{"id":"java/Java-Polymorphism","title":"Java-Polymorphism","description":"Polymorphism is a fundamental concept in object-oriented programming (OOP) that allows objects of different classes to be treated as objects of a common superclass. In Java, polymorphism is achieved through method overriding and method overloading.","sidebar":"tutorialSidebar"},"java/Java-RegEx":{"id":"java/Java-RegEx","title":"Java-RegEx","description":"Regular expressions, often abbreviated as \\"regex\\" or \\"regexp,\\" are patterns used to match character combinations in strings. In Java, regular expressions are supported through the java.util.regex package. Here\'s a detailed explanation with examples:","sidebar":"tutorialSidebar"},"java/Java-Security":{"id":"java/Java-Security","title":"Java-Security","description":"Security in Java is a crucial aspect due to its widespread use in various domains, including web development, enterprise applications, and mobile app development. Java provides several built-in features and APIs to address security concerns, such as protecting against unauthorized access, preventing malicious code execution, and ensuring data integrity. Below, I\'ll provide a detailed explanation of some key security features in Java along with examples:","sidebar":"tutorialSidebar"},"java/Java-Servlets":{"id":"java/Java-Servlets","title":"Java-Servlets","description":"Here\'s a detailed explanation of Servlets in Java along with examples:","sidebar":"tutorialSidebar"},"java/Java-Switch-Statements":{"id":"java/Java-Switch-Statements","title":"Java-Switch-Statements","description":"The switch statement in Java is a control flow statement used to select one of many code blocks to be executed, based on the value of a variable or expression. It provides an alternative to multiple if-else statements when you have a single variable to check against multiple possible values.","sidebar":"tutorialSidebar"},"java/Java-Synatx":{"id":"java/Java-Synatx","title":"Java-Synatx","description":"Java syntax refers to the rules and conventions that govern the structure of Java code. These rules dictate how Java programs are written and formatted. Here\'s a basic overview of some key syntax elements in Java:","sidebar":"tutorialSidebar"},"java/Java-TypeCasting":{"id":"java/Java-TypeCasting","title":"Java-TypeCasting","description":"Type casting in Java refers to the process of converting a value from one data type to another. This is often necessary when you want to assign a value of one type to a variable of a different type, or when performing arithmetic operations involving different data types.","sidebar":"tutorialSidebar"},"java/Java-While Loops":{"id":"java/Java-While Loops","title":"Java-While Loops","description":"Here\'s a detailed explanation of Java While Loops along with examples:","sidebar":"tutorialSidebar"},"java/Java-Working-with-Strings":{"id":"java/Java-Working-with-Strings","title":"Java-Working-with-Strings","description":"Strings are a fundamental data type in Java, used to represent sequences of characters. In Java, strings are objects of the java.lang.String class, and they are immutable, meaning their values cannot be changed once they are created. This tutorial will cover various operations and methods available for working with strings in Java.","sidebar":"tutorialSidebar"},"java/Java-Wrapper Class":{"id":"java/Java-Wrapper Class","title":"Java-Wrapper Class","description":"Wrapper classes in Java are used to convert primitive data types into objects, as primitives are not treated as objects in Java. There are eight primitive data types in Java","sidebar":"tutorialSidebar"},"java/Java.GUI":{"id":"java/Java.GUI","title":"Java.GUI","description":"Graphical User Interface (GUI) programming in Java involves creating interactive applications with graphical elements such as windows, buttons, text fields, checkboxes, etc. Java provides several libraries and frameworks for building GUIs, with two main options being Swing and JavaFX. Here, I\'ll provide an overview of both and include some basic examples.","sidebar":"tutorialSidebar"},"java/Java.Variables":{"id":"java/Java.Variables","title":"Java.Variables","description":"Variables in Java are used to store data values that can be manipulated and referenced within a program. In Java, every variable has a data type, which determines the type of data it can hold, as well as a name, which is used to refer to the variable in the code.","sidebar":"tutorialSidebar"},"java/Setting-Up-Your-Java-Development-Environment":{"id":"java/Setting-Up-Your-Java-Development-Environment","title":"Setting-Up-Your-Java-Development-Environment","description":"Setting up a Java development environment involves installing the necessary software and configuring your system to compile, run, and debug Java programs. Here\'s a detailed guide on setting up your Java development environment on Windows, macOS, and other operating systems:","sidebar":"tutorialSidebar"},"python/Python-Classes or Objects":{"id":"python/Python-Classes or Objects","title":"Python-Classes or Objects","description":"In Python, classes and objects are fundamental concepts of object-oriented programming (OOP).","sidebar":"tutorialSidebar"},"python/Python-comments":{"id":"python/Python-comments","title":"Python-comments","description":"In Python, you can add comments to your code to provide explanations or disable specific lines of code. Comments are ignored by the Python interpreter and are meant for human readers. Here are some examples of different types of comments in Python:","sidebar":"tutorialSidebar"},"python/Python-control-statements":{"id":"python/Python-control-statements","title":"Python-control-statements","description":"In Python, control statements are used to alter the flow of execution in a program. They allow you to perform repetitive tasks, make decisions based on conditions, and handle exceptional situations. The main control statements in Python are loops (for and while) and the break and continue statements. Here is an explanation of each control statement along with examples:","sidebar":"tutorialSidebar"},"python/Python-datatypes":{"id":"python/Python-datatypes","title":"Python-datatypes","description":"Python supports several built-in data types that allow you to store and manipulate different kinds of data. Here are some common data types in Python along with examples:","sidebar":"tutorialSidebar"},"python/Python-Datetime":{"id":"python/Python-Datetime","title":"Python-Datetime","description":"In Python, datetime is a module in the standard library that provides classes and functions to work with dates and times. The datetime module allows you to manipulate dates, times, and time intervals, making it easier to perform various operations related to time-based calculations.","sidebar":"tutorialSidebar"},"python/Python-decision-making":{"id":"python/Python-decision-making","title":"Python-decision-making","description":"In Python, decision-making is implemented using conditional statements. Conditional statements allow the program to execute different blocks of code based on specific conditions. The main conditional statements in Python are the if statement, the if-else statement, and the if-elif-else statement. Here is an explanation of each along with examples and diagrams:","sidebar":"tutorialSidebar"},"python/Python-Dictionaries":{"id":"python/Python-Dictionaries","title":"Python-Dictionaries","description":"In Python, a dictionary is a built-in data type that represents a collection of key-value pairs. It is also known as an associative array or a hash map in other programming languages. Dictionaries are unordered, mutable, and iterable, allowing efficient lookup, insertion, and deletion of elements based on their keys.","sidebar":"tutorialSidebar"},"python/Python-environment-setup":{"id":"python/Python-environment-setup","title":"Python-environment-setup","description":"Setting up a Python environment can vary slightly depending on the platform you are using. Here\'s a general guide to setting up a Python environment on different platforms:","sidebar":"tutorialSidebar"},"python/Python-Exception Handling":{"id":"python/Python-Exception Handling","title":"Python-Exception Handling","description":"Exception handling in Python is a mechanism that allows you to deal with errors, exceptions, and unexpected situations that may occur during the execution of a program. When an error or exceptional situation arises, it disrupts the normal flow of the program and may cause it to crash. Exception handling helps you control and recover from these exceptional situations in a structured and graceful manner.","sidebar":"tutorialSidebar"},"python/Python-File Handling":{"id":"python/Python-File Handling","title":"Python-File Handling","description":"File handling in Python refers to the process of working with files on the computer\'s file system. It allows you to read data from files, write data to files, and perform various operations like opening, closing, deleting, and updating files. Python provides built-in functions and methods to handle files, making it easy to interact with the file system.","sidebar":"tutorialSidebar"},"python/Python-For Loops":{"id":"python/Python-For Loops","title":"Python-For Loops","description":"A \\"for loop\\" in Python is a control flow statement that allows you to iterate over a sequence of elements and execute a block of code for each item in the sequence. It simplifies the process of performing repetitive tasks or processing data contained in lists, tuples, strings, dictionaries, or other iterable objects.","sidebar":"tutorialSidebar"},"python/Python-Functions":{"id":"python/Python-Functions","title":"Python-Functions","description":"In Python, a function is a block of reusable code that performs a specific task. Functions help in organizing code, making it easier to read, understand, and maintain. You can define your own functions in Python using the def keyword, and then you can call those functions to execute the code inside them.","sidebar":"tutorialSidebar"},"python/Python-home":{"id":"python/Python-home","title":"Python Home","description":"Welcome to the Python tutorial! This tutorial is designed to provide beginners with a comprehensive introduction to the Python programming language. By the end of this tutorial, you will have a solid understanding of Python\'s basic and advanced concepts, enabling you to develop your skills further and become a proficient software engineer.","sidebar":"tutorialSidebar"},"python/Python-If ... Else":{"id":"python/Python-If ... Else","title":"Python-If ... Else","description":"In Python, the if-else statement is a conditional statement used to make decisions in your code based on certain conditions. It allows you to execute different blocks of code depending on whether a given condition is True or False. It has the following basic syntax:","sidebar":"tutorialSidebar"},"python/Python-Inheritance":{"id":"python/Python-Inheritance","title":"Python-Inheritance","description":"Inheritance is an essential object-oriented programming (OOP) concept in Python and many other programming languages. It allows a class (subclass) to inherit the properties and behaviors (attributes and methods) of another class (superclass). The subclass can reuse and extend the functionalities of the superclass, promoting code reusability and creating a hierarchical relationship between classes.","sidebar":"tutorialSidebar"},"python/Python-Iterators":{"id":"python/Python-Iterators","title":"Python-Iterators","description":"In Python, an iterator is an object that allows you to traverse through a sequence of elements, one at a time, without having to know the underlying structure of the data. It provides a common interface for iterating over various types of data structures, such as lists, tuples, dictionaries, strings, and more.","sidebar":"tutorialSidebar"},"python/Python-JSON":{"id":"python/Python-JSON","title":"Python-JSON","description":"JSON stands for \\"JavaScript Object Notation,\\" and it is a lightweight data interchange format used to represent and exchange data between systems. JSON is designed to be both human-readable and easy to parse for machines, making it a popular choice for data storage and communication in various applications.","sidebar":"tutorialSidebar"},"python/Python-Lambda":{"id":"python/Python-Lambda","title":"Python-Lambda","description":"In Python, a lambda function is a small anonymous function that can have any number of arguments but can only have one expression. Lambda functions are also known as \\"anonymous functions\\" because they don\'t have a name like regular functions defined using the def keyword.","sidebar":"tutorialSidebar"},"python/Python-lists":{"id":"python/Python-lists","title":"Python-lists","description":"In Python, a list is a collection of items that are ordered and mutable. It allows you to store multiple values of different data types in a single variable. Lists are created by enclosing comma-separated values within square brackets [ ].","sidebar":"tutorialSidebar"},"python/Python-Math":{"id":"python/Python-Math","title":"Python-Math","description":"Python\'s math module provides a set of mathematical functions and constants that are commonly used in various computations. To use the math module, you need to import it first. Here\'s a brief explanation of some commonly used functions and constants along with examples:","sidebar":"tutorialSidebar"},"python/Python-Modules":{"id":"python/Python-Modules","title":"Python-Modules","description":"In Python, modules are files that contain Python code and can be used to organize and reuse functionality in your programs. Modules help break down large programs into smaller, manageable pieces, making the code more organized, maintainable, and easier to read.","sidebar":"tutorialSidebar"},"python/Python-Multithreading":{"id":"python/Python-Multithreading","title":"Python-Multithreading","description":"Multithreading in Python refers to the capability of a program to execute multiple threads concurrently within the same process. A thread is the smallest unit of execution within a process, and multithreading allows a program to perform multiple tasks simultaneously. Each thread shares the same memory space of the process, allowing for more efficient and faster execution of tasks.","sidebar":"tutorialSidebar"},"python/Python-numbers":{"id":"python/Python-numbers","title":"Python-numbers","description":"In Python, there are several numeric data types that can be used to represent different kinds of numbers. Here are the commonly used numeric data types in Python along with their detailed explanations and examples:","sidebar":"tutorialSidebar"},"python/Python-operators":{"id":"python/Python-operators","title":"Python-operators","description":"Python provides a variety of operators that allow you to perform different operations on values and variables. Here are some of the commonly used operators in Python along with examples:","sidebar":"tutorialSidebar"},"python/Python-overview":{"id":"python/Python-overview","title":"Python Overview","description":"Python characteristics","sidebar":"tutorialSidebar"},"python/Python-PIP":{"id":"python/Python-PIP","title":"Python-PIP","description":"PIP stands for \\"Package Installer for Python.\\" It is a command-line tool used to install, upgrade, and manage Python packages from the Python Package Index (PyPI) and other package repositories. PyPI is a central repository that hosts thousands of third-party Python packages, providing a wide range of functionalities that extend the capabilities of Python.","sidebar":"tutorialSidebar"},"python/Python-Polymorphism":{"id":"python/Python-Polymorphism","title":"Python-Polymorphism","description":"Polymorphism is a key concept in object-oriented programming (OOP) and refers to the ability of different classes to be treated as instances of a common superclass. In Python, polymorphism allows objects of different types to be used interchangeably through a shared interface. This shared interface can be achieved through method overriding and the use of abstract base classes (ABCs). There are two main types of polymorphism in Python: compile-time polymorphism and runtime polymorphism.","sidebar":"tutorialSidebar"},"python/Python-RegEx":{"id":"python/Python-RegEx","title":"Python-RegEx","description":"A regular expression (regex or regexp) is a sequence of characters that defines a search pattern. It is a powerful and concise way to describe a set of strings based on a specific pattern. Regular expressions are used in various programming languages, including Python, to perform text search, pattern matching, and text manipulation tasks.","sidebar":"tutorialSidebar"},"python/Python-Scope":{"id":"python/Python-Scope","title":"Python-Scope","description":"In Python, scope refers to the region in a program where a particular variable is accessible and can be referenced. There are two main types of scopes in Python: local scope and global scope.","sidebar":"tutorialSidebar"},"python/Python-sets":{"id":"python/Python-sets","title":"Python-sets","description":"In Python, a set is an unordered collection of unique elements. It is a built-in data type used to store a collection of distinct items. Sets are similar to lists and tuples, but they have some key differences:","sidebar":"tutorialSidebar"},"python/Python-String Formatting":{"id":"python/Python-String Formatting","title":"Python-String Formatting","description":"String formatting is the process of creating formatted strings by combining variables, constants, or expressions with placeholders inside a string. It allows you to construct dynamic strings where certain parts change based on the values of the variables or expressions involved.","sidebar":"tutorialSidebar"},"python/Python-strings":{"id":"python/Python-strings","title":"Python-strings","description":"In Python, a string is a sequence of characters enclosed within either single quotes (\') or double quotes (\\"). Strings are immutable, meaning they cannot be changed once created. They can contain letters, numbers, symbols, and whitespace.","sidebar":"tutorialSidebar"},"python/Python-syntax":{"id":"python/Python-syntax","title":"Python-syntax","description":"Here\'s an overview of declaring Python syntax, indentation, comments, and variables:","sidebar":"tutorialSidebar"},"python/Python-tuples":{"id":"python/Python-tuples","title":"Python-tuples","description":"In Python, a tuple is an ordered collection of items that is immutable, meaning its elements cannot be modified after creation. Tuples are declared by enclosing comma-separated values within parentheses ( ).","sidebar":"tutorialSidebar"},"python/Python-User Input":{"id":"python/Python-User Input","title":"Python-User Input","description":"In Python, user input can be obtained using the built-in input() function. This function allows you to prompt the user for input and then wait for them to enter a value. The value entered by the user is treated as a string by default, but you can convert it to other data types as needed.","sidebar":"tutorialSidebar"},"python/Python-variables":{"id":"python/Python-variables","title":"Python-variables","description":"Variables in Python are used to store data values. They act as containers that hold references to objects in memory. Here is a document based on the information from the link you provided:","sidebar":"tutorialSidebar"},"python/Python-While Loops":{"id":"python/Python-While Loops","title":"Python-While Loops","description":"A while loop is a control flow statement in programming that allows a block of code to be executed repeatedly as long as a specified condition is true. It is used when you want to repeat a certain action or code block until a specific condition is no longer satisfied.","sidebar":"tutorialSidebar"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template.","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed...","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:","sidebar":"tutorialSidebar"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack).","sidebar":"tutorialSidebar"},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features.","sidebar":"tutorialSidebar"},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs.","sidebar":"tutorialSidebar"},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French.","sidebar":"tutorialSidebar"}}}')}}]);
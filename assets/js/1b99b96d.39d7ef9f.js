"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[3597],{8233:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=s(4848),a=s(8453);const r={sidebar_position:10},o="Java Expressions",l={id:"java/Java-Expressions",title:"Java-Expressions",description:"Expressions in Java are fundamental building blocks of any program, representing computations, operations, or values. They can be as simple as a single literal value or variable, or as complex as a combination of operators and operands. Here's a detailed explanation of Java expressions along with examples:",source:"@site/docs/java/Java-Expressions.md",sourceDirName:"java",slug:"/java/Java-Expressions",permalink:"/my-website-tutorial/docs/java/Java-Expressions",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/java/Java-Expressions.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Java-Operators",permalink:"/my-website-tutorial/docs/java/Java-Operators"},next:{title:"Java-If-Else-Statements",permalink:"/my-website-tutorial/docs/java/Java-If-Else-Statements"}},t={},c=[];function d(e){const n={code:"code",h1:"h1",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Expressions in Java are fundamental building blocks of any program, representing computations, operations, or values. They can be as simple as a single literal value or variable, or as complex as a combination of operators and operands. Here's a detailed explanation of Java expressions along with examples:"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"java-expressions",children:"Java Expressions"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Literal Expressions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Literal expressions represent constant values, such as numbers or strings."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'int number = 10; // Integer literal expression\r\ndouble pi = 3.14; // Floating-point literal expression\r\nString message = "Hello, world!"; // String literal expression\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Variable Expressions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Variable expressions represent the value stored in a variable."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"int x = 5;\r\nint y = x * 2; // Variable expression using the value of 'x'\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arithmetic Expressions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Arithmetic expressions involve arithmetic operations such as addition, subtraction, multiplication, and division."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"int sum = 10 + 20; // Addition expression\r\nint difference = 50 - 30; // Subtraction expression\r\ndouble product = 5.5 * 2.0; // Multiplication expression\r\nfloat quotient = 10 / 3f; // Division expression\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Relational Expressions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Relational expressions compare two values and return a boolean result indicating the relationship between them."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"int a = 10, b = 20;\r\nboolean isEqual = (a == b); // Equality expression\r\nboolean isGreaterThan = (a > b); // Greater than expression\r\nboolean isLessThanOrEqual = (a <= b); // Less than or equal expression\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Logical Expressions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Logical expressions involve logical operators (&&, ||, !) to combine boolean values."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"boolean hasPermission = true;\r\nboolean isLoggedIn = false;\r\nboolean canAccessPage = hasPermission && isLoggedIn; // Logical AND expression\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Conditional Expressions"})," (Ternary Operator):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Conditional expressions provide a compact way to express a conditional operation."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'int score = 75;\r\nString result = (score >= 60) ? "Pass" : "Fail"; // Ternary conditional expression\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Assignment Expressions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Assignment expressions assign a value to a variable."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"int value;\r\nvalue = 10; // Simple assignment expression\r\nvalue += 5; // Compound assignment expression (value = value + 5)\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Method Call Expressions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Method call expressions invoke a method with specified arguments."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'String text = "Hello";\r\nint length = text.length(); // Method call expression\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Array Access Expressions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Array access expressions retrieve or assign values to elements in an array."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"int[] numbers = {10, 20, 30};\r\nint firstElement = numbers[0]; // Array access expression\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Type Cast Expressions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Type cast expressions convert a value from one data type to another."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"double pi = 3.14;\r\nint approxPi = (int) pi; // Type cast expression\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These are some common types of expressions in Java. Understanding expressions is essential for writing Java programs as they form the core of any computation or operation within the code."})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(6540);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);
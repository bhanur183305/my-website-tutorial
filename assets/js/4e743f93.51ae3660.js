"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[1448],{8822:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var t=e(4848),s=e(8453);const a={sidebar_position:21},i="Java Constructor",o={id:"java/Java-Constructor",title:"Java-Constructor",description:"Here's a detailed explanation of constructors in Java with examples:",source:"@site/docs/java/Java-Constructor.md",sourceDirName:"java",slug:"/java/Java-Constructor",permalink:"/my-website-tutorial/docs/java/Java-Constructor",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/java/Java-Constructor.md",tags:[],version:"current",sidebarPosition:21,frontMatter:{sidebar_position:21},sidebar:"tutorialSidebar",previous:{title:"Java-Classes-Objects",permalink:"/my-website-tutorial/docs/java/Java-Classes-Objects"},next:{title:"Java-Modifiers",permalink:"/my-website-tutorial/docs/java/Java-Modifiers"}},c={},l=[];function d(n){const r={br:"br",code:"code",h1:"h1",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:"Here's a detailed explanation of constructors in Java with examples:"}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h1,{id:"java-constructor",children:"Java Constructor"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"What is a Constructor?"}),(0,t.jsx)(r.br,{}),"\n","A constructor in Java is a special type of method that is automatically called when an instance (object) of a class is created. Its main purpose is to initialize the newly created object. Constructors have the same name as the class and do not have a return type, not even ",(0,t.jsx)(r.code,{children:"void"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Types of Constructors:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Default Constructor"}),": If you don't explicitly define a constructor for your class, Java provides a default constructor automatically. It initializes instance variables with their default values and is typically empty."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Parameterized Constructor"}),": Constructors that accept parameters to initialize instance variables with specific values."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Syntax:"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"public class MyClass {\r\n    // Default Constructor\r\n    public MyClass() {\r\n        // Initialization code\r\n    }\r\n    \r\n    // Parameterized Constructor\r\n    public MyClass(int parameter1, String parameter2) {\r\n        // Initialization code using parameters\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Examples:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Default Constructor Example"}),":","\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'public class Car {\r\n    String make;\r\n    int year;\r\n    \r\n    // Default Constructor\r\n    public Car() {\r\n        make = "Toyota";\r\n        year = 2022;\r\n    }\r\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Parameterized Constructor Example"}),":","\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"public class Person {\r\n    String name;\r\n    int age;\r\n    \r\n    // Parameterized Constructor\r\n    public Person(String n, int a) {\r\n        name = n;\r\n        age = a;\r\n    }\r\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Initializing Objects using Constructors:"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'// Creating objects using constructors\r\nCar car1 = new Car(); // Invokes default constructor\r\nPerson person1 = new Person("John", 30); // Invokes parameterized constructor\n'})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Constructor Overloading"}),":",(0,t.jsx)(r.br,{}),"\n","Like other methods, constructors can be overloaded by having multiple constructors with different parameter lists."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"public class Rectangle {\r\n    int length;\r\n    int width;\r\n    \r\n    // Parameterized Constructor 1\r\n    public Rectangle(int l, int w) {\r\n        length = l;\r\n        width = w;\r\n    }\r\n    \r\n    // Parameterized Constructor 2\r\n    public Rectangle(int side) {\r\n        length = side;\r\n        width = side;\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Chaining Constructors (Constructor chaining)"}),":",(0,t.jsx)(r.br,{}),"\n","In Java, one constructor can call another constructor within the same class using ",(0,t.jsx)(r.code,{children:"this()"})," keyword. This is useful for reusing code or initializing objects differently based on parameters."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'public class Student {\r\n    String name;\r\n    int age;\r\n    String gender;\r\n    \r\n    // Parameterized Constructor 1\r\n    public Student(String n, int a) {\r\n        this(n, a, "Unknown");\r\n    }\r\n    \r\n    // Parameterized Constructor 2 (Chaining Constructor)\r\n    public Student(String n, int a, String g) {\r\n        name = n;\r\n        age = a;\r\n        gender = g;\r\n    }\r\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Constructors play a vital role in Java programming as they ensure that objects are properly initialized before they are used, thereby preventing potential errors and ensuring the correctness of the program."})]})}function u(n={}){const{wrapper:r}={...(0,s.R)(),...n.components};return r?(0,t.jsx)(r,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,r,e)=>{e.d(r,{R:()=>i,x:()=>o});var t=e(6540);const s={},a=t.createContext(s);function i(n){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function o(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),t.createElement(a.Provider,{value:r},n.children)}}}]);
"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[6185],{5214:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(4848),t=n(8453);const s={sidebar_position:17},i="Java Arrays and Collections",l={id:"java/Java-Arrays-Collections",title:"Java-Arrays-Collections",description:"Here's a detailed explanation of arrays and collections in Java, along with examples:",source:"@site/docs/java/Java-Arrays-Collections.md",sourceDirName:"java",slug:"/java/Java-Arrays-Collections",permalink:"/my-website-tutorial/docs/java/Java-Arrays-Collections",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/java/Java-Arrays-Collections.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"tutorialSidebar",previous:{title:"Java-break-countinue",permalink:"/my-website-tutorial/docs/java/Java-break-countinue"},next:{title:"Java-Methods",permalink:"/my-website-tutorial/docs/java/Java-Methods"}},o={},c=[{value:"Arrays",id:"arrays",level:3},{value:"Collections",id:"collections",level:3}];function d(e){const a={code:"code",h1:"h1",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.p,{children:"Here's a detailed explanation of arrays and collections in Java, along with examples:"}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h1,{id:"java-arrays-and-collections",children:"Java Arrays and Collections"}),"\n",(0,r.jsx)(a.h3,{id:"arrays",children:"Arrays"}),"\n",(0,r.jsx)(a.p,{children:"Arrays in Java are used to store multiple values of the same type in a single variable. They provide a way to work with collections of values efficiently. Arrays have a fixed size, which means that once they are created, their size cannot be changed."}),"\n",(0,r.jsx)(a.p,{children:"Declaration and Initialization:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'// Declaration and initialization of an array of integers\r\nint[] numbers = {10, 20, 30, 40, 50};\r\n\r\n// Declaration and initialization of an array of strings\r\nString[] names = {"Alice", "Bob", "Charlie", "David"};\n'})}),"\n",(0,r.jsx)(a.p,{children:"Accessing Elements:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:"// Accessing elements of the array\r\nint firstNumber = numbers[0]; // Accessing the first element\r\nString lastName = names[3]; // Accessing the fourth element\n"})}),"\n",(0,r.jsx)(a.p,{children:"Iterating through an Array:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:"// Iterating through the array using a for loop\r\nfor (int i = 0; i < numbers.length; i++) {\r\n    System.out.println(numbers[i]);\r\n}\n"})}),"\n",(0,r.jsx)(a.h3,{id:"collections",children:"Collections"}),"\n",(0,r.jsx)(a.p,{children:"Collections in Java are objects that group multiple elements into a single unit. Unlike arrays, collections can grow or shrink dynamically. Java provides a framework called the Java Collections Framework (JCF) that includes several interfaces and classes to work with collections."}),"\n",(0,r.jsx)(a.p,{children:"Common Collection Interfaces:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"List"}),": Ordered collection that allows duplicate elements. Examples: ArrayList, LinkedList."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Set"}),": Unordered collection that does not allow duplicate elements. Examples: HashSet, TreeSet."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Map"}),": Key-value pair collection where each key is associated with exactly one value. Examples: HashMap, TreeMap."]}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:"Example of Using ArrayList (List Implementation):"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:"import java.util.ArrayList;\r\n\r\n// Creating an ArrayList of integers\r\nArrayList<Integer> numbersList = new ArrayList<>();\r\n\r\n// Adding elements to the ArrayList\r\nnumbersList.add(10);\r\nnumbersList.add(20);\r\nnumbersList.add(30);\r\n\r\n// Accessing elements of the ArrayList\r\nint firstNumber = numbersList.get(0); // Accessing the first element\r\n\r\n// Iterating through the ArrayList using an enhanced for loop\r\nfor (int num : numbersList) {\r\n    System.out.println(num);\r\n}\n"})}),"\n",(0,r.jsx)(a.p,{children:"Example of Using HashMap (Map Implementation):"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'import java.util.HashMap;\r\n\r\n// Creating a HashMap of names and ages\r\nHashMap<String, Integer> ageMap = new HashMap<>();\r\n\r\n// Adding key-value pairs to the HashMap\r\nageMap.put("Alice", 25);\r\nageMap.put("Bob", 30);\r\nageMap.put("Charlie", 35);\r\n\r\n// Accessing values from the HashMap using keys\r\nint aliceAge = ageMap.get("Alice"); // Accessing Alice\'s age\r\n\r\n// Iterating through the HashMap using a for-each loop\r\nfor (String name : ageMap.keySet()) {\r\n    int age = ageMap.get(name);\r\n    System.out.println(name + ": " + age);\r\n}\n'})}),"\n",(0,r.jsx)(a.p,{children:"These are just a few examples of how arrays and collections can be used in Java to store and manipulate data efficiently. Arrays are suitable for fixed-size collections, while collections provide more flexibility and functionality for dynamic collections."})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>l});var r=n(6540);const t={},s=r.createContext(t);function i(e){const a=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:a},e.children)}}}]);
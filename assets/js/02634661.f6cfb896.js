"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[9217],{8384:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>h});var t=r(4848),s=r(8453);const i={sidebar_position:9},l="Python Strings",a={id:"python/Python-strings",title:"Python-strings",description:"In Python, a string is a sequence of characters enclosed within either single quotes (') or double quotes (\"). Strings are immutable, meaning they cannot be changed once created. They can contain letters, numbers, symbols, and whitespace.",source:"@site/docs/python/Python-strings.md",sourceDirName:"python",slug:"/python/Python-strings",permalink:"/my-website-tutorial/docs/python/Python-strings",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python/Python-strings.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Python-operators",permalink:"/my-website-tutorial/docs/python/Python-operators"},next:{title:"Python-numbers",permalink:"/my-website-tutorial/docs/python/Python-numbers"}},c={},h=[];function o(e){const n={code:"code",h1:"h1",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["In Python, a string is a sequence of characters enclosed within either single quotes (",(0,t.jsx)(n.code,{children:"'"}),") or double quotes (",(0,t.jsx)(n.code,{children:'"'}),"). Strings are immutable, meaning they cannot be changed once created. They can contain letters, numbers, symbols, and whitespace."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h1,{id:"python-strings",children:"Python Strings"}),"\n",(0,t.jsx)(n.p,{children:"To declare a string in Python, you can simply assign a value enclosed in quotes to a variable. Here are some examples:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Declaring strings\r\nname = \"Alice\"\r\nmessage = 'Hello, world!'\r\nquote = \"Don't give up!\"\r\n\r\n# Print the strings\r\nprint(name)     # Output: Alice\r\nprint(message)  # Output: Hello, world!\r\nprint(quote)    # Output: Don't give up!\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can use either single quotes or double quotes to declare strings. Both are valid, and the choice depends on your preference or the specific requirements of the string content."}),"\n",(0,t.jsx)(n.p,{children:"In addition to the basic declaration, Python provides various string manipulation methods and operators that allow you to perform operations such as concatenation, slicing, formatting, and more on strings."}),"\n",(0,t.jsx)(n.p,{children:"Sure! Here's an explanation and an example for each of the string methods you mentioned:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"capitalize():"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"capitalize()"})," method returns a copy of the string with its first character capitalized and all other characters converted to lowercase."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string = "hello world"\r\ncapitalized_string = string.capitalize()\r\nprint(capitalized_string)  # Output: "Hello world"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"casefold():"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"casefold()"})," method returns a casefolded version of the string. Casefolding is similar to lowercasing but more aggressive in that it is intended to remove all case distinctions present in a string."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string = "HELLO WORLD"\r\ncasefolded_string = string.casefold()\r\nprint(casefolded_string)  # Output: "hello world"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"center(width, fillchar=' '):"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"center()"})," method returns a centered string of a specified width. If the width is less than the length of the string, the original string is returned."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string = "Python"\r\ncentered_string = string.center(10, "*")\r\nprint(centered_string)  # Output: "**Python**"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"count(substring, start=0, end=len(string)):"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"count()"})," method returns the number of occurrences of a substring in the string. You can optionally specify the start and end indices to limit the search."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string = "hello world"\r\ncount = string.count("o")\r\nprint(count)  # Output: 2\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"encode(encoding='utf-8', errors='strict'):"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"encode()"})," method returns an encoded version of the string using the specified encoding. By default, it uses the UTF-8 encoding."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string = "hello world"\r\nencoded_string = string.encode("utf-16")\r\nprint(encoded_string)  # Output: b\'\\xff\\xfeh\\x00e\\x00l\\x00l\\x00o\\x00 \\x00w\\x00o\\x00r\\x00l\\x00d\\x00\'\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"endswith(suffix, start=0, end=len(string)):"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"endswith()"})," method returns ",(0,t.jsx)(n.code,{children:"True"})," if the string ends with the specified suffix; otherwise, it returns ",(0,t.jsx)(n.code,{children:"False"}),". You can optionally specify the start and end indices to limit the search."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string = "hello world"\r\nresult = string.endswith("world")\r\nprint(result)  # Output: True\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"expandtabs(tabsize=8):"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"expandtabs()"})," method returns a copy of the string with tab characters ('\\t') replaced by spaces. By default, the tab size is 8 spaces."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string = "hello\\tworld"\r\nexpanded_string = string.expandtabs(4)\r\nprint(expanded_string)  # Output: "hello   world"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"find(substring, start=0, end=len(string)):"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"find()"})," method returns the lowest index of the substring in the string. If the substring is not found, it returns -1. You can optionally specify the start and end indices to limit the search."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string = "hello world"\r\nindex = string.find("o")\r\nprint(index)  # Output: 4\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["**format(*args, ",(0,t.jsx)(n.strong,{children:"kwargs):"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"format()"})," method formats the string"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["by replacing placeholders in the form of ",(0,t.jsx)(n.code,{children:"{}"})," with the specified values. Placeholders can be positional or named."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'name = "Alice"\r\nage = 25\r\nmessage = "My name is {} and I am {} years old.".format(name, age)\r\nprint(message)  # Output: "My name is Alice and I am 25 years old."\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"10",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"format_map(mapping):"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"format_map()"})," method formats the string by replacing placeholders in the form of ",(0,t.jsx)(n.code,{children:"{}"})," with the values from a mapping object."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"data = {'name': 'Alice', 'age': 25}\r\nmessage = \"My name is {name} and I am {age} years old.\".format_map(data)\r\nprint(message)  # Output: \"My name is Alice and I am 25 years old.\"\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"index(substring, start=0, end=len(string)):"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"index()"})," method returns the index of the first occurrence of the substring in the string. If the substring is not found, it raises a ",(0,t.jsx)(n.code,{children:"ValueError"}),". You can optionally specify the start and end indices to limit the search."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string = "hello world"\r\nindex = string.index("o")\r\nprint(index)  # Output: 4\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"isalnum():"}),"\r\nThe ",(0,t.jsx)(n.code,{children:"isalnum()"})," method returns ",(0,t.jsx)(n.code,{children:"True"})," if all characters in the string are alphanumeric (letters or numbers); otherwise, it returns ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'string = "Hello123"\r\nresult = string.isalnum()\r\nprint(result)  # Output: True\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"isalpha():"}),"\r\nThis method checks if all the characters in a string are alphabetic (letters) and returns ",(0,t.jsx)(n.code,{children:"True"})," if they are, otherwise ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello"\r\nprint(text.isalpha())  # Output: True\r\n\r\ntext = "Hello123"\r\nprint(text.isalpha())  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"14",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"isascii():"}),"\r\nThis method checks if all the characters in a string are ASCII characters and returns ",(0,t.jsx)(n.code,{children:"True"})," if they are, otherwise ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello"\r\nprint(text.isascii())  # Output: True\r\n\r\ntext = "\u4f60\u597d"\r\nprint(text.isascii())  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"15",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"isdecimal():"}),"\r\nThis method checks if all the characters in a string are decimal characters (0-9) and returns ",(0,t.jsx)(n.code,{children:"True"})," if they are, otherwise ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "123"\r\nprint(text.isdecimal())  # Output: True\r\n\r\ntext = "12.3"\r\nprint(text.isdecimal())  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"16",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"isdigit():"}),"\r\nThis method checks if all the characters in a string are digits and returns ",(0,t.jsx)(n.code,{children:"True"})," if they are, otherwise ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "123"\r\nprint(text.isdigit())  # Output: True\r\n\r\ntext = "12.3"\r\nprint(text.isdigit())  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"17",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"isidentifier():"}),"\r\nThis method checks if a string is a valid identifier (variable name) in Python and returns ",(0,t.jsx)(n.code,{children:"True"})," if it is, otherwise ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "hello"\r\nprint(text.isidentifier())  # Output: True\r\n\r\ntext = "123hello"\r\nprint(text.isidentifier())  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"18",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"islower():"}),"\r\nThis method checks if all the characters in a string are lowercase and returns ",(0,t.jsx)(n.code,{children:"True"})," if they are, otherwise ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "hello"\r\nprint(text.islower())  # Output: True\r\n\r\ntext = "Hello"\r\nprint(text.islower())  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"19",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"isnumeric():"}),"\r\nThis method checks if all the characters in a string are numeric and returns ",(0,t.jsx)(n.code,{children:"True"})," if they are, otherwise ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "123"\r\nprint(text.isnumeric())  # Output: True\r\n\r\ntext = "12.3"\r\nprint(text.isnumeric())  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"20",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"isprintable():"}),"\r\nThis method checks if all the characters in a string are printable and returns ",(0,t.jsx)(n.code,{children:"True"})," if they are, otherwise ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello"\r\nprint(text.isprintable())  # Output: True\r\n\r\ntext = "Hello\\nWorld"\r\nprint(text.isprintable())  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"21",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"isspace():"}),"\r\nThis method checks if all the characters in a string are whitespace characters and returns ",(0,t.jsx)(n.code,{children:"True"})," if they are, otherwise ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "   "\r\nprint(text.isspace())  # Output: True\r\n\r\ntext = "Hello"\r\nprint(text.isspace())  # Output: False\n'})}),"\n",(0,t.jsx)(n.p,{children:"Here are explanations and examples for some commonly used string methods in Python:"}),"\n",(0,t.jsxs)(n.ol,{start:"22",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"istitle()"})}),":\r\nThis method checks if the string is in titlecase format, meaning the first character of each word is capitalized and the remaining characters are lowercase."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "This Is Title Case"\r\nprint(text.istitle())  # Output: True\r\n\r\ntext = "This is Not Title Case"\r\nprint(text.istitle())  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"23",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"isupper()"})}),":\r\nThis method checks if all the characters in the string are uppercase."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "HELLO"\r\nprint(text.isupper())  # Output: True\r\n\r\ntext = "Hello"\r\nprint(text.isupper())  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"24",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"join(iterable)"})}),":\r\nThis method joins the elements of an iterable (e.g., a list) into a single string, using the string as a delimiter."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'fruits = ["apple", "banana", "cherry"]\r\nresult = ", ".join(fruits)\r\nprint(result)  # Output: "apple, banana, cherry"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"25",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"ljust(width, fillchar=' ')"})}),":\r\nThis method left-aligns the string within a specified width by padding it with a specified character (default is space)."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello"\r\nresult = text.ljust(10, "-")\r\nprint(result)  # Output: "Hello-----"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"26",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"lower()"})}),":\r\nThis method returns a new string with all the characters converted to lowercase."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello"\r\nresult = text.lower()\r\nprint(result)  # Output: "hello"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"27",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"lstrip(chars=None)"})}),":\r\nThis method returns a new string with leading characters removed (default is whitespace)."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "   Hello"\r\nresult = text.lstrip()\r\nprint(result)  # Output: "Hello"\r\n\r\ntext = "*!!*Hello"\r\nresult = text.lstrip("*!")\r\nprint(result)  # Output: "Hello"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"28",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"maketrans(x, y, z)"})}),":\r\nThis method returns a translation table that can be used with the ",(0,t.jsx)(n.code,{children:"translate()"})," method to replace specified characters."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Replace 'a' with 'x', 'b' with 'y', and 'c' with 'z'\r\ntranslation_table = str.maketrans(\"abc\", \"xyz\")\r\n\r\ntext = \"abc\"\r\nresult = text.translate(translation_table)\r\nprint(result)  # Output: \"xyz\"\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"29",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"partition(sep)"})}),":\r\nThis method splits the string at the first occurrence of a separator and returns a tuple containing the part before the separator, the separator itself, and the part after the separator."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello, World!"\r\nresult = text.partition(",")\r\nprint(result)  # Output: ("Hello", ",", " World!")\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"30",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"removeprefix(prefix)"})}),":\r\nThis method returns a new string with the specified prefix removed, if present."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello, World!"\r\nresult = text.removeprefix("Hello, ")\r\nprint(result)  # Output: "World!"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"31",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"removesuffix(suffix)"})}),":\r\nThis method returns a new string with the specified suffix removed, if present."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello, World!"\r\nresult = text.removesuffix(",\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:'World!")\r\nprint(result)  # Output: "Hello"'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'\r\n32. **`replace(old, new, count=-1)`**:\r\nThis method returns a new string where all occurrences of the old substring are replaced with the new substring. The `count` parameter specifies the maximum number of replacements to make.\r\n\r\n```python\r\ntext = "Hello, World!"\r\nresult = text.replace("o", "i")\r\nprint(result)  # Output: "Helli, Wirld!"\r\n\r\nresult = text.replace("o", "i", 2)\r\nprint(result)  # Output: "Helli, World!"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"33",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"rfind(sub, start=None, end=None)"})}),":\r\nThis method returns the highest index of the substring in the string, searching from right to left."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello, World!"\r\nresult = text.rfind("o")\r\nprint(result)  # Output: 8\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"rindex(sub, start=None, end=None)"})}),":\r\nThis method works like ",(0,t.jsx)(n.code,{children:"rfind()"}),", but raises an exception if the substring is not found."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello, World!"\r\nresult = text.rindex("o")\r\nprint(result)  # Output: 8\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"rjust(width, fillchar=' ')"})}),":\r\nThis method right-aligns the string within a specified width by padding it with a specified character (default is space)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello"\r\nresult = text.rjust(10, "-")\r\nprint(result)  # Output: "-----Hello"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"rpartition(sep)"})}),":\r\nThis method splits the string at the last occurrence of a separator and returns a tuple containing the part before the separator, the separator itself, and the part after the separator."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello, World!"\r\nresult = text.rpartition(",")\r\nprint(result)  # Output: ("Hello, World!", ",", "")\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"rsplit(sep=None, maxsplit=-1)"})}),":\r\nThis method splits the string into a list of substrings at each occurrence of the specified separator, starting from the right."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello, World!"\r\nresult = text.rsplit(",")\r\nprint(result)  # Output: ["Hello", " World!"]\r\n\r\nresult = text.rsplit(",", 1)\r\nprint(result)  # Output: ["Hello, World!", ""]\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"rstrip(chars=None)"})}),":\r\nThis method returns a new string with trailing characters removed (default is whitespace)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello   "\r\nresult = text.rstrip()\r\nprint(result)  # Output: "Hello"\r\n\r\ntext = "Hello*!!*"\r\nresult = text.rstrip("*!")\r\nprint(result)  # Output: "Hello"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"split(sep=None, maxsplit=-1)"})}),":\r\nThis method splits the string into a list of substrings at each occurrence of the specified separator."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello, World!"\r\nresult = text.split(",")\r\nprint(result)  # Output: ["Hello", " World!"]\r\n\r\nresult = text.split(" ", 1)\r\nprint(result)  # Output: ["Hello,", "World!"]\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"splitlines(keepends=False)"})}),":\r\nThis method splits the string at line breaks and returns a list of lines."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello\\nWorld\\n"\r\nresult = text.split\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:'lines()\r\nprint(result)  # Output: ["Hello", "World"]'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'41. **`startswith(prefix, start=None, end=None)`**:\r\nThis method checks if the string starts with the specified prefix.\r\n\r\n```python\r\ntext = "Hello, World!"\r\nprint(text.startswith("Hello"))  # Output: True\r\nprint(text.startswith("Hi"))  # Output: False\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"42",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"strip(chars=None)"})}),":\r\nThis method returns a new string with leading and trailing characters removed (default is whitespace)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "   Hello   "\r\nresult = text.strip()\r\nprint(result)  # Output: "Hello"\r\n\r\ntext = "*!!*Hello*!!*"\r\nresult = text.strip("*!")\r\nprint(result)  # Output: "Hello"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"swapcase()"})}),":\r\nThis method returns a new string where the case of each character is swapped (lowercase becomes uppercase and vice versa)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello, World!"\r\nresult = text.swapcase()\r\nprint(result)  # Output: "hELLO, wORLD!"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"title()"})}),":\r\nThis method returns a new string where the first character of each word is capitalized and the remaining characters are lowercase."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "this is title case"\r\nresult = text.title()\r\nprint(result)  # Output: "This Is Title Case"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"translate(table)"})}),":\r\nThis method returns a new string where specified characters are replaced according to a translation table."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello, World!"\r\ntranslation_table = str.maketrans("o", "e")\r\nresult = text.translate(translation_table)\r\nprint(result)  # Output: "Helle, Werld!"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"upper()"})}),":\r\nThis method returns a new string with all the characters converted to uppercase."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "Hello"\r\nresult = text.upper()\r\nprint(result)  # Output: "HELLO"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"zfill(width)"})}),":\r\nThis method pads the string with zeros (0) on the left side to make it a specified width."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'text = "42"\r\nresult = text.zfill(5)\r\nprint(result)  # Output: "00042"\r\n\r\ntext = "-42"\r\nresult = text.zfill(5)\r\nprint(result)  # Output: "-0042"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These are just a few examples of Python string methods. There are many more methods available that provide various operations and manipulations on strings."})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[8581],{5610:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Tutorial Intro","href":"/my-website-tutorial/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Tutorial - Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a Page","href":"/my-website-tutorial/docs/tutorial-basics/create-a-page","docId":"tutorial-basics/create-a-page","unlisted":false},{"type":"link","label":"Create a Document","href":"/my-website-tutorial/docs/tutorial-basics/create-a-document","docId":"tutorial-basics/create-a-document","unlisted":false},{"type":"link","label":"Create a Blog Post","href":"/my-website-tutorial/docs/tutorial-basics/create-a-blog-post","docId":"tutorial-basics/create-a-blog-post","unlisted":false},{"type":"link","label":"Markdown Features","href":"/my-website-tutorial/docs/tutorial-basics/markdown-features","docId":"tutorial-basics/markdown-features","unlisted":false},{"type":"link","label":"Deploy your site","href":"/my-website-tutorial/docs/tutorial-basics/deploy-your-site","docId":"tutorial-basics/deploy-your-site","unlisted":false},{"type":"link","label":"Congratulations!","href":"/my-website-tutorial/docs/tutorial-basics/congratulations","docId":"tutorial-basics/congratulations","unlisted":false}],"href":"/my-website-tutorial/docs/category/tutorial---basics"},{"type":"category","label":"Tutorial - Extras","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Manage Docs Versions","href":"/my-website-tutorial/docs/tutorial-extras/manage-docs-versions","docId":"tutorial-extras/manage-docs-versions","unlisted":false},{"type":"link","label":"Translate your site","href":"/my-website-tutorial/docs/tutorial-extras/translate-your-site","docId":"tutorial-extras/translate-your-site","unlisted":false}],"href":"/my-website-tutorial/docs/category/tutorial---extras"},{"type":"category","label":"Python","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Python Home","href":"/my-website-tutorial/docs/python/Python-home","docId":"python/Python-home","unlisted":false},{"type":"link","label":"Python Overview","href":"/my-website-tutorial/docs/python/Python-overview","docId":"python/Python-overview","unlisted":false},{"type":"link","label":"Python-environment-setup","href":"/my-website-tutorial/docs/python/Python-environment-setup","docId":"python/Python-environment-setup","unlisted":false},{"type":"link","label":"Python-comments","href":"/my-website-tutorial/docs/python/Python-comments","docId":"python/Python-comments","unlisted":false},{"type":"link","label":"Python-syntax","href":"/my-website-tutorial/docs/python/Python-syntax","docId":"python/Python-syntax","unlisted":false},{"type":"link","label":"Python-variables","href":"/my-website-tutorial/docs/python/Python-variables","docId":"python/Python-variables","unlisted":false},{"type":"link","label":"Python-datatypes","href":"/my-website-tutorial/docs/python/Python-datatypes","docId":"python/Python-datatypes","unlisted":false},{"type":"link","label":"Python-operators","href":"/my-website-tutorial/docs/python/Python-operators","docId":"python/Python-operators","unlisted":false},{"type":"link","label":"Python-strings","href":"/my-website-tutorial/docs/python/Python-strings","docId":"python/Python-strings","unlisted":false},{"type":"link","label":"Python-numbers","href":"/my-website-tutorial/docs/python/Python-numbers","docId":"python/Python-numbers","unlisted":false},{"type":"link","label":"Python-lists","href":"/my-website-tutorial/docs/python/Python-lists","docId":"python/Python-lists","unlisted":false},{"type":"link","label":"Python-tuples","href":"/my-website-tutorial/docs/python/Python-tuples","docId":"python/Python-tuples","unlisted":false},{"type":"link","label":"Python-sets","href":"/my-website-tutorial/docs/python/Python-sets","docId":"python/Python-sets","unlisted":false},{"type":"link","label":"Python-String Formatting","href":"/my-website-tutorial/docs/python/Python-String Formatting","docId":"python/Python-String Formatting","unlisted":false},{"type":"link","label":"Python-Dictionaries","href":"/my-website-tutorial/docs/python/Python-Dictionaries","docId":"python/Python-Dictionaries","unlisted":false},{"type":"link","label":"Python-decision-making","href":"/my-website-tutorial/docs/python/Python-decision-making","docId":"python/Python-decision-making","unlisted":false},{"type":"link","label":"Python-If ... Else","href":"/my-website-tutorial/docs/python/Python-If ... Else","docId":"python/Python-If ... Else","unlisted":false},{"type":"link","label":"Python-control-statements","href":"/my-website-tutorial/docs/python/Python-control-statements","docId":"python/Python-control-statements","unlisted":false},{"type":"link","label":"Python-For Loops","href":"/my-website-tutorial/docs/python/Python-For Loops","docId":"python/Python-For Loops","unlisted":false},{"type":"link","label":"Python-While Loops","href":"/my-website-tutorial/docs/python/Python-While Loops","docId":"python/Python-While Loops","unlisted":false},{"type":"link","label":"Python-User Input","href":"/my-website-tutorial/docs/python/Python-User Input","docId":"python/Python-User Input","unlisted":false},{"type":"link","label":"Python-Exception Handling","href":"/my-website-tutorial/docs/python/Python-Exception Handling","docId":"python/Python-Exception Handling","unlisted":false},{"type":"link","label":"Python-Functions","href":"/my-website-tutorial/docs/python/Python-Functions","docId":"python/Python-Functions","unlisted":false},{"type":"link","label":"Python-Modules","href":"/my-website-tutorial/docs/python/Python-Modules","docId":"python/Python-Modules","unlisted":false},{"type":"link","label":"Python-File Handling","href":"/my-website-tutorial/docs/python/Python-File Handling","docId":"python/Python-File Handling","unlisted":false},{"type":"link","label":"Python-Classes or Objects","href":"/my-website-tutorial/docs/python/Python-Classes or Objects","docId":"python/Python-Classes or Objects","unlisted":false},{"type":"link","label":"Python-Inheritance","href":"/my-website-tutorial/docs/python/Python-Inheritance","docId":"python/Python-Inheritance","unlisted":false},{"type":"link","label":"Python-Polymorphism","href":"/my-website-tutorial/docs/python/Python-Polymorphism","docId":"python/Python-Polymorphism","unlisted":false},{"type":"link","label":"Python-Iterators","href":"/my-website-tutorial/docs/python/Python-Iterators","docId":"python/Python-Iterators","unlisted":false},{"type":"link","label":"Python-Math","href":"/my-website-tutorial/docs/python/Python-Math","docId":"python/Python-Math","unlisted":false},{"type":"link","label":"Python-Datetime","href":"/my-website-tutorial/docs/python/Python-Datetime","docId":"python/Python-Datetime","unlisted":false},{"type":"link","label":"Python-Lambda","href":"/my-website-tutorial/docs/python/Python-Lambda","docId":"python/Python-Lambda","unlisted":false},{"type":"link","label":"Python-Multithreading","href":"/my-website-tutorial/docs/python/Python-Multithreading","docId":"python/Python-Multithreading","unlisted":false},{"type":"link","label":"Python-RegEx","href":"/my-website-tutorial/docs/python/Python-RegEx","docId":"python/Python-RegEx","unlisted":false},{"type":"link","label":"Python-JSON","href":"/my-website-tutorial/docs/python/Python-JSON","docId":"python/Python-JSON","unlisted":false},{"type":"link","label":"Python-PIP","href":"/my-website-tutorial/docs/python/Python-PIP","docId":"python/Python-PIP","unlisted":false},{"type":"link","label":"Python-Scope","href":"/my-website-tutorial/docs/python/Python-Scope","docId":"python/Python-Scope","unlisted":false}],"href":"/my-website-tutorial/docs/category/python"}]},"docs":{"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes.","sidebar":"tutorialSidebar"},"python/Python-Classes or Objects":{"id":"python/Python-Classes or Objects","title":"Python-Classes or Objects","description":"In Python, classes and objects are fundamental concepts of object-oriented programming (OOP).","sidebar":"tutorialSidebar"},"python/Python-comments":{"id":"python/Python-comments","title":"Python-comments","description":"In Python, you can add comments to your code to provide explanations or disable specific lines of code. Comments are ignored by the Python interpreter and are meant for human readers. Here are some examples of different types of comments in Python:","sidebar":"tutorialSidebar"},"python/Python-control-statements":{"id":"python/Python-control-statements","title":"Python-control-statements","description":"In Python, control statements are used to alter the flow of execution in a program. They allow you to perform repetitive tasks, make decisions based on conditions, and handle exceptional situations. The main control statements in Python are loops (for and while) and the break and continue statements. Here is an explanation of each control statement along with examples:","sidebar":"tutorialSidebar"},"python/Python-datatypes":{"id":"python/Python-datatypes","title":"Python-datatypes","description":"Python supports several built-in data types that allow you to store and manipulate different kinds of data. Here are some common data types in Python along with examples:","sidebar":"tutorialSidebar"},"python/Python-Datetime":{"id":"python/Python-Datetime","title":"Python-Datetime","description":"In Python, datetime is a module in the standard library that provides classes and functions to work with dates and times. The datetime module allows you to manipulate dates, times, and time intervals, making it easier to perform various operations related to time-based calculations.","sidebar":"tutorialSidebar"},"python/Python-decision-making":{"id":"python/Python-decision-making","title":"Python-decision-making","description":"In Python, decision-making is implemented using conditional statements. Conditional statements allow the program to execute different blocks of code based on specific conditions. The main conditional statements in Python are the if statement, the if-else statement, and the if-elif-else statement. Here is an explanation of each along with examples and diagrams:","sidebar":"tutorialSidebar"},"python/Python-Dictionaries":{"id":"python/Python-Dictionaries","title":"Python-Dictionaries","description":"In Python, a dictionary is a built-in data type that represents a collection of key-value pairs. It is also known as an associative array or a hash map in other programming languages. Dictionaries are unordered, mutable, and iterable, allowing efficient lookup, insertion, and deletion of elements based on their keys.","sidebar":"tutorialSidebar"},"python/Python-environment-setup":{"id":"python/Python-environment-setup","title":"Python-environment-setup","description":"Setting up a Python environment can vary slightly depending on the platform you are using. Here\'s a general guide to setting up a Python environment on different platforms:","sidebar":"tutorialSidebar"},"python/Python-Exception Handling":{"id":"python/Python-Exception Handling","title":"Python-Exception Handling","description":"Exception handling in Python is a mechanism that allows you to deal with errors, exceptions, and unexpected situations that may occur during the execution of a program. When an error or exceptional situation arises, it disrupts the normal flow of the program and may cause it to crash. Exception handling helps you control and recover from these exceptional situations in a structured and graceful manner.","sidebar":"tutorialSidebar"},"python/Python-File Handling":{"id":"python/Python-File Handling","title":"Python-File Handling","description":"File handling in Python refers to the process of working with files on the computer\'s file system. It allows you to read data from files, write data to files, and perform various operations like opening, closing, deleting, and updating files. Python provides built-in functions and methods to handle files, making it easy to interact with the file system.","sidebar":"tutorialSidebar"},"python/Python-For Loops":{"id":"python/Python-For Loops","title":"Python-For Loops","description":"A \\"for loop\\" in Python is a control flow statement that allows you to iterate over a sequence of elements and execute a block of code for each item in the sequence. It simplifies the process of performing repetitive tasks or processing data contained in lists, tuples, strings, dictionaries, or other iterable objects.","sidebar":"tutorialSidebar"},"python/Python-Functions":{"id":"python/Python-Functions","title":"Python-Functions","description":"In Python, a function is a block of reusable code that performs a specific task. Functions help in organizing code, making it easier to read, understand, and maintain. You can define your own functions in Python using the def keyword, and then you can call those functions to execute the code inside them.","sidebar":"tutorialSidebar"},"python/Python-home":{"id":"python/Python-home","title":"Python Home","description":"Welcome to the Python tutorial! This tutorial is designed to provide beginners with a comprehensive introduction to the Python programming language. By the end of this tutorial, you will have a solid understanding of Python\'s basic and advanced concepts, enabling you to develop your skills further and become a proficient software engineer.","sidebar":"tutorialSidebar"},"python/Python-If ... Else":{"id":"python/Python-If ... Else","title":"Python-If ... Else","description":"In Python, the if-else statement is a conditional statement used to make decisions in your code based on certain conditions. It allows you to execute different blocks of code depending on whether a given condition is True or False. It has the following basic syntax:","sidebar":"tutorialSidebar"},"python/Python-Inheritance":{"id":"python/Python-Inheritance","title":"Python-Inheritance","description":"Inheritance is an essential object-oriented programming (OOP) concept in Python and many other programming languages. It allows a class (subclass) to inherit the properties and behaviors (attributes and methods) of another class (superclass). The subclass can reuse and extend the functionalities of the superclass, promoting code reusability and creating a hierarchical relationship between classes.","sidebar":"tutorialSidebar"},"python/Python-Iterators":{"id":"python/Python-Iterators","title":"Python-Iterators","description":"In Python, an iterator is an object that allows you to traverse through a sequence of elements, one at a time, without having to know the underlying structure of the data. It provides a common interface for iterating over various types of data structures, such as lists, tuples, dictionaries, strings, and more.","sidebar":"tutorialSidebar"},"python/Python-JSON":{"id":"python/Python-JSON","title":"Python-JSON","description":"JSON stands for \\"JavaScript Object Notation,\\" and it is a lightweight data interchange format used to represent and exchange data between systems. JSON is designed to be both human-readable and easy to parse for machines, making it a popular choice for data storage and communication in various applications.","sidebar":"tutorialSidebar"},"python/Python-Lambda":{"id":"python/Python-Lambda","title":"Python-Lambda","description":"In Python, a lambda function is a small anonymous function that can have any number of arguments but can only have one expression. Lambda functions are also known as \\"anonymous functions\\" because they don\'t have a name like regular functions defined using the def keyword.","sidebar":"tutorialSidebar"},"python/Python-lists":{"id":"python/Python-lists","title":"Python-lists","description":"In Python, a list is a collection of items that are ordered and mutable. It allows you to store multiple values of different data types in a single variable. Lists are created by enclosing comma-separated values within square brackets [ ].","sidebar":"tutorialSidebar"},"python/Python-Math":{"id":"python/Python-Math","title":"Python-Math","description":"Python\'s math module provides a set of mathematical functions and constants that are commonly used in various computations. To use the math module, you need to import it first. Here\'s a brief explanation of some commonly used functions and constants along with examples:","sidebar":"tutorialSidebar"},"python/Python-Modules":{"id":"python/Python-Modules","title":"Python-Modules","description":"In Python, modules are files that contain Python code and can be used to organize and reuse functionality in your programs. Modules help break down large programs into smaller, manageable pieces, making the code more organized, maintainable, and easier to read.","sidebar":"tutorialSidebar"},"python/Python-Multithreading":{"id":"python/Python-Multithreading","title":"Python-Multithreading","description":"Multithreading in Python refers to the capability of a program to execute multiple threads concurrently within the same process. A thread is the smallest unit of execution within a process, and multithreading allows a program to perform multiple tasks simultaneously. Each thread shares the same memory space of the process, allowing for more efficient and faster execution of tasks.","sidebar":"tutorialSidebar"},"python/Python-numbers":{"id":"python/Python-numbers","title":"Python-numbers","description":"In Python, there are several numeric data types that can be used to represent different kinds of numbers. Here are the commonly used numeric data types in Python along with their detailed explanations and examples:","sidebar":"tutorialSidebar"},"python/Python-operators":{"id":"python/Python-operators","title":"Python-operators","description":"Python provides a variety of operators that allow you to perform different operations on values and variables. Here are some of the commonly used operators in Python along with examples:","sidebar":"tutorialSidebar"},"python/Python-overview":{"id":"python/Python-overview","title":"Python Overview","description":"Python characteristics","sidebar":"tutorialSidebar"},"python/Python-PIP":{"id":"python/Python-PIP","title":"Python-PIP","description":"PIP stands for \\"Package Installer for Python.\\" It is a command-line tool used to install, upgrade, and manage Python packages from the Python Package Index (PyPI) and other package repositories. PyPI is a central repository that hosts thousands of third-party Python packages, providing a wide range of functionalities that extend the capabilities of Python.","sidebar":"tutorialSidebar"},"python/Python-Polymorphism":{"id":"python/Python-Polymorphism","title":"Python-Polymorphism","description":"Polymorphism is a key concept in object-oriented programming (OOP) and refers to the ability of different classes to be treated as instances of a common superclass. In Python, polymorphism allows objects of different types to be used interchangeably through a shared interface. This shared interface can be achieved through method overriding and the use of abstract base classes (ABCs). There are two main types of polymorphism in Python: compile-time polymorphism and runtime polymorphism.","sidebar":"tutorialSidebar"},"python/Python-RegEx":{"id":"python/Python-RegEx","title":"Python-RegEx","description":"A regular expression (regex or regexp) is a sequence of characters that defines a search pattern. It is a powerful and concise way to describe a set of strings based on a specific pattern. Regular expressions are used in various programming languages, including Python, to perform text search, pattern matching, and text manipulation tasks.","sidebar":"tutorialSidebar"},"python/Python-Scope":{"id":"python/Python-Scope","title":"Python-Scope","description":"In Python, scope refers to the region in a program where a particular variable is accessible and can be referenced. There are two main types of scopes in Python: local scope and global scope.","sidebar":"tutorialSidebar"},"python/Python-sets":{"id":"python/Python-sets","title":"Python-sets","description":"In Python, a set is an unordered collection of unique elements. It is a built-in data type used to store a collection of distinct items. Sets are similar to lists and tuples, but they have some key differences:","sidebar":"tutorialSidebar"},"python/Python-String Formatting":{"id":"python/Python-String Formatting","title":"Python-String Formatting","description":"String formatting is the process of creating formatted strings by combining variables, constants, or expressions with placeholders inside a string. It allows you to construct dynamic strings where certain parts change based on the values of the variables or expressions involved.","sidebar":"tutorialSidebar"},"python/Python-strings":{"id":"python/Python-strings","title":"Python-strings","description":"In Python, a string is a sequence of characters enclosed within either single quotes (\') or double quotes (\\"). Strings are immutable, meaning they cannot be changed once created. They can contain letters, numbers, symbols, and whitespace.","sidebar":"tutorialSidebar"},"python/Python-syntax":{"id":"python/Python-syntax","title":"Python-syntax","description":"Here\'s an overview of declaring Python syntax, indentation, comments, and variables:","sidebar":"tutorialSidebar"},"python/Python-tuples":{"id":"python/Python-tuples","title":"Python-tuples","description":"In Python, a tuple is an ordered collection of items that is immutable, meaning its elements cannot be modified after creation. Tuples are declared by enclosing comma-separated values within parentheses ( ).","sidebar":"tutorialSidebar"},"python/Python-User Input":{"id":"python/Python-User Input","title":"Python-User Input","description":"In Python, user input can be obtained using the built-in input() function. This function allows you to prompt the user for input and then wait for them to enter a value. The value entered by the user is treated as a string by default, but you can convert it to other data types as needed.","sidebar":"tutorialSidebar"},"python/Python-variables":{"id":"python/Python-variables","title":"Python-variables","description":"Variables in Python are used to store data values. They act as containers that hold references to objects in memory. Here is a document based on the information from the link you provided:","sidebar":"tutorialSidebar"},"python/Python-While Loops":{"id":"python/Python-While Loops","title":"Python-While Loops","description":"A while loop is a control flow statement in programming that allows a block of code to be executed repeatedly as long as a specified condition is true. It is used when you want to repeat a certain action or code block until a specific condition is no longer satisfied.","sidebar":"tutorialSidebar"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template.","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed...","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:","sidebar":"tutorialSidebar"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack).","sidebar":"tutorialSidebar"},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features.","sidebar":"tutorialSidebar"},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs.","sidebar":"tutorialSidebar"},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French.","sidebar":"tutorialSidebar"}}}')}}]);